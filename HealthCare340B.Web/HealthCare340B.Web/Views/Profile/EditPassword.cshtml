@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model VMMCustomer
@{
    Layout = null;
}

<div class="card">
    <div class="card-body">
        <form id="frmNewPassword">
            <h2>Ubah Password</h2>
            <p>Masukkan password baru</p>
            <div class="form-group">
                <label for="password">Password*</label>
                <div class="input-container" style="position: relative; display: flex; align-items: center;">
                    <input type="password" class="form-control" id="newPassword" style="padding-right: 40px;">
                    <span class="toggle-password" style="position: absolute; right: 10px; cursor: pointer;" onclick="togglePassword('password')">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
            </div>
            <div class="form-group">
                <label for="confirm-password">Masukkan ulang password*</label>
                <div class="input-container" style="position: relative; display: flex; align-items: center;">
                    <input type="password" class="form-control" id="confirm-newPassword" style="padding-right: 40px;">
                    <span class="toggle-password" style="position: absolute; right: 10px; cursor: pointer;" onclick="togglePassword('confirm-password')">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
                <small id="password-alert" style="display: none; color: red;">* Password tidak sama</small>
            </div>
            <button type="button" class="btn btn-primary" id="btnUpdatePassword" onclick="validatePassword()">Ubah Password</button>
        </form>
    </div>
</div>

<script>
    // Toggle password visibility
    function togglePassword(id) {
        var input = document.getElementById(id);
        if (input.type === "password") {
            input.type = "text";
        } else {
            input.type = "password";
        }
    }

    // Validate password matching
    function validatePassword() {
        var password = document.getElementById('password').value;
        var confirmPassword = document.getElementById('confirm-password').value;
        var alert = document.getElementById('password-alert');

        if (password !== confirmPassword) {
            alert.style.display = 'block';
        } else {
            alert.style.display = 'none';
            alert("Password successfully updated!");
        }
    }

    // jQuery form validation for password rules
    $(document).ready(function () {
        $("#frmNewPassword").validate({
            rules: {
                password: {
                    maxlength: 100,
                    minlength: 8, // Minimum 8 characters
                    required: true
                }
            },
            messages: {
                password: {
                    required: "Silahkan masukkan password",
                    minlength: "Password minimal 8 karakter"
                }
            },
            errorClass: "text-danger"
        });
    });

    // Password update logic with OTP generation
    $(document).on("click", "#btnUpdatePassword", function (e) {
        e.preventDefault();
        console.log("masuk ga")

        var newPassword = $("#newPassword").val();
        var confirmPassword = $("#confirm-newPassword").val();
        console.log("Password baru: " + newPassword);

        if (newPassword !== confirmPassword) {
            $("#password-alert").show();
        } else {
            $("#password-alert").hide();

            if ($("#frmNewPassword").valid()) { 
                $.ajax({
                    url: '/Profile/GenerateOTPPassword',
                    type: 'POST',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify({ 
                        password: newPassword,
                        email: "@Model.Email"
                    }),
                    success: function (otpResponse) {
                        if (otpResponse.statusCode === 201 || otpResponse.statusCode === 200) {
                            $("#staticModalLgBody").html("");
                            $("#staticModalBody").load("/Profile/OTPPassword?email=" + encodeURIComponent("@Model.Email") + "&password=" + encodeURIComponent(newPassword), function () {
                                console.log("Modal loaded, starting countdown...");

                                var countdownDuration = 90;
                                var display = document.querySelector('#countdown');
                                if (display) {
                                    startCountdown(countdownDuration, display);
                                } else {
                                    console.error("Elemen #countdown tidak ditemukan");
                                }
                            });
                        } else {
                            console.error("Error generating OTP: ", otpResponse.message);
                        }
                    },
                    error: function (error) {
                        console.error("Error generating OTP: ", error);
                    }
                });
            }
        }
    });
</script>
